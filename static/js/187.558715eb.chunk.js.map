{"version":3,"file":"static/js/187.558715eb.chunk.js","mappings":"8NASA,SAASA,IACP,MAAM,eAAEC,EAAc,cAAEC,IAAkBC,EAAAA,EAAAA,YAAWC,EAAAA,KAC/C,QAAEC,IAAYF,EAAAA,EAAAA,YAAWG,EAAAA,IACzBC,GAAMC,EAAAA,EAAAA,MACNC,GAAkBC,EAAAA,EAAAA,cACtBC,IAOO,IAPN,QACCC,EAAO,OACPC,EAAM,kBACNC,EAAiB,QACjBC,EAAO,aACPC,EAAY,WACZC,GACDN,EACC,OACEO,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CAACC,UAAW,OAAOH,SAAA,CACvBlB,IACCgB,EAAAA,EAAAA,KAAA,OACEM,UAAS,sFAAwFJ,UAEjGF,EAAAA,EAAAA,KAACO,EAAAA,EAAO,CACNb,QAASA,EACTC,OAAQA,EACRa,kBAAmBZ,EACnBa,cAAeX,EACfY,gBAAiBb,EACjBc,QAAS5B,EACT6B,OAASC,IACH1B,EAASY,EAAWc,IAEtBxB,GAAIyB,EAAAA,EAAAA,IAASC,EAAAA,GAAKC,QAClBjC,GAAe,GACjB,EAEFkC,OAAOjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAY,QAIzBlC,IACCgB,EAAAA,EAAAA,KAAA,OACEmB,QAASA,IAAMpC,GAAe,GAC9BuB,UAAU,0EAIf,GAGP,CAACtB,IAEH,OAAOgB,EAAAA,EAAAA,KAACoB,EAAAA,EAAgB,CAACC,OAAQ9B,GACnC,CACA,SAAe+B,EAAAA,EAAAA,MAAKxC,E","sources":["components/Ui/ChatBox/ChatBoxWithLogic.jsx"],"sourcesContent":["import { memo, useCallback, useContext } from \"react\";\nimport { Portal } from \"../../Modules\";\nimport ChatBox from \"./ChatBox\";\nimport TitleChatBox from \"./TitleChatBox\";\nimport { SendShortMessage } from \"../../sharedLogic/renderProps\";\nimport { AuthContext, ToggleActionsContext } from \"../../../context\";\nimport { useNavigate } from \"react-router-dom\";\nimport { fromMain, Main } from \"../../../routes/clientPath\";\n\nfunction ChatBoxWithLogic() {\n  const { chatBoxHandler, isChatBoxOpen } = useContext(ToggleActionsContext);\n  const { isLogin } = useContext(AuthContext);\n  const nav = useNavigate();\n  const ChatBoxWithData = useCallback(\n    ({\n      message,\n      answer,\n      GetMessageLoading,\n      sending,\n      sendingError,\n      setMessage,\n    }) => {\n      return (\n        <>\n          <Portal container={\"body\"}>\n            {isChatBoxOpen && (\n              <div\n                className={` h-[400px] w-[300px] font-dana-md transition-all fixed left-5 bottom-[100px] z-[13]`}\n              >\n                <ChatBox\n                  message={message}\n                  answer={answer}\n                  isLoadingToGetMsg={GetMessageLoading}\n                  isErrorToSend={sendingError}\n                  isLoadingToSend={sending}\n                  onClose={chatBoxHandler}\n                  onSend={(val) => {\n                    if (isLogin) setMessage(val);\n                    else {\n                      nav(fromMain(Main.login));\n                      chatBoxHandler(false);\n                    }\n                  }}\n                  title={<TitleChatBox />}\n                />\n              </div>\n            )}\n            {isChatBoxOpen && (\n              <div\n                onClick={() => chatBoxHandler(false)}\n                className=\"w-full h-screen fixed inset-0 z-[11] bg-black/50 backdrop-blur-md\"\n              ></div>\n            )}\n          </Portal>\n        </>\n      );\n    },\n    [isChatBoxOpen]\n  );\n  return <SendShortMessage render={ChatBoxWithData} />;\n}\nexport default memo(ChatBoxWithLogic);\n"],"names":["ChatBoxWithLogic","chatBoxHandler","isChatBoxOpen","useContext","ToggleActionsContext","isLogin","AuthContext","nav","useNavigate","ChatBoxWithData","useCallback","_ref","message","answer","GetMessageLoading","sending","sendingError","setMessage","_jsx","_Fragment","children","_jsxs","Portal","container","className","ChatBox","isLoadingToGetMsg","isErrorToSend","isLoadingToSend","onClose","onSend","val","fromMain","Main","login","title","TitleChatBox","onClick","SendShortMessage","render","memo"],"sourceRoot":""}